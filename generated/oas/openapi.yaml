openapi: 3.1.0
info:
  title: ヰ世界のテラリウム API
  version: 0.0.0
tags:
  - name: Authenticate
  - name: Creator
  - name: SongType
paths:
  /auth/login:
    post:
      operationId: AuthenticateService_login
      description: 認証API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          headers:
            Set-Cookie:
              required: true
              schema:
                type: string
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Access is unauthorized.
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - Authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
  /creators:
    get:
      operationId: CreatorService_listCreators
      description: クリエイター一覧取得API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorListResponse'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - Creator
    post:
      operationId: CreatorService_createCreator
      description: クリエイター作成API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorCreateResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - Creator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorCreateRequest'
  /creators/{creatorId}:
    get:
      operationId: CreatorService_getCreator
      description: クリエイター取得API
      parameters:
        - name: creatorId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorGetResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - Creator
    put:
      operationId: CreatorService_updateCreator
      description: クリエイター更新API
      parameters:
        - name: creatorId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorUpdateResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - Creator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorUpdateRequest'
    delete:
      operationId: CreatorService_deleteCreator
      description: クリエイター削除API
      parameters:
        - name: creatorId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - Creator
  /song-types:
    get:
      operationId: SongTypeService_listSongTypes
      description: 楽曲種別一覧取得API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeListResponse'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
    post:
      operationId: SongTypeService_createSongType
      description: 楽曲種別作成API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeCreateResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongTypeCreateRequest'
  /song-types/{songTypeId}:
    get:
      operationId: SongTypeService_getSongType
      description: 楽曲種別取得API
      parameters:
        - name: songTypeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeGetResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
    put:
      operationId: SongTypeService_updateSongType
      description: 楽曲種別更新API
      parameters:
        - name: songTypeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeUpdateResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongTypeUpdateRequest'
    delete:
      operationId: SongTypeService_deleteSongType
      description: 楽曲種別削除API
      parameters:
        - name: songTypeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
components:
  schemas:
    Creator:
      type: object
      required:
        - creatorId
        - creatorName
      properties:
        creatorId:
          $ref: '#/components/schemas/creatorId'
        creatorName:
          $ref: '#/components/schemas/creatorName'
      examples:
        - creatorId: 0cc5f492-22fe-4f38-b702-8b2375bc0254
          creatorName: ヰ世界情緒
    CreatorCreateRequest:
      type: object
      required:
        - creatorName
      properties:
        creatorName:
          $ref: '#/components/schemas/creatorName'
    CreatorCreateResponse:
      type: object
      required:
        - creator
      properties:
        creator:
          $ref: '#/components/schemas/Creator'
    CreatorGetResponse:
      type: object
      required:
        - creator
      properties:
        creator:
          $ref: '#/components/schemas/Creator'
    CreatorListResponse:
      type: object
      required:
        - creators
      properties:
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Creator'
    CreatorUpdateRequest:
      type: object
      required:
        - creatorName
      properties:
        creatorName:
          $ref: '#/components/schemas/creatorName'
    CreatorUpdateResponse:
      type: object
      required:
        - creator
      properties:
        creator:
          $ref: '#/components/schemas/Creator'
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          $ref: '#/components/schemas/email'
        password:
          type: string
          format: password
    SongType:
      type: object
      required:
        - songTypeId
        - songTypeName
        - orderNo
      properties:
        songTypeId:
          $ref: '#/components/schemas/songTypeId'
        songTypeName:
          $ref: '#/components/schemas/songTypeName'
        orderNo:
          $ref: '#/components/schemas/orderNo'
      examples:
        - songTypeId: 5e8211d4-2952-407c-ba7b-18c3fe0da6e0
          songTypeName: オリジナル
          orderNo: 1
    SongTypeCreateRequest:
      type: object
      required:
        - songTypeName
        - orderNo
      properties:
        songTypeName:
          $ref: '#/components/schemas/songTypeName'
        orderNo:
          $ref: '#/components/schemas/orderNo'
    SongTypeCreateResponse:
      type: object
      required:
        - songType
      properties:
        songType:
          $ref: '#/components/schemas/SongType'
    SongTypeGetResponse:
      type: object
      required:
        - songType
      properties:
        songType:
          $ref: '#/components/schemas/SongType'
    SongTypeListResponse:
      type: object
      required:
        - songTypes
      properties:
        songTypes:
          type: array
          items:
            $ref: '#/components/schemas/SongType'
    SongTypeUpdateRequest:
      type: object
      required:
        - songTypeName
        - orderNo
      properties:
        songTypeName:
          $ref: '#/components/schemas/songTypeName'
        orderNo:
          $ref: '#/components/schemas/orderNo'
    SongTypeUpdateResponse:
      type: object
      required:
        - songType
      properties:
        songType:
          $ref: '#/components/schemas/SongType'
    ValidationError:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    creatorId:
      type: string
      format: uuid
      description: クリエイターID
    creatorName:
      type: string
      minLength: 1
      description: クリエイター名
    email:
      type: string
      format: email
      description: メールアドレス
    orderNo:
      type: integer
      format: int32
      minimum: 1
      description: 表示順
    songTypeId:
      type: string
      format: uuid
      description: 楽曲種別ID
    songTypeName:
      type: string
      minLength: 1
      description: 楽曲種別名
    uuid:
      type: string
      format: uuid
      description: UUID v4
servers:
  - url: https://local.admin.terrarium.isekaijoucho.fan/api
    description: ローカル環境
    variables: {}
