openapi: 3.1.0
info:
  title: ヰ世界のテラリウム API
  version: 0.0.0
tags:
  - name: SongType
paths:
  /song-types:
    get:
      operationId: SongTypeService_listSongTypes
      description: 楽曲種別一覧取得API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeListResponse'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
    post:
      operationId: SongTypeService_createSongType
      description: 楽曲種別作成API
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeCreateResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongTypeCreateRequest'
  /song-types/{songTypeId}:
    get:
      operationId: SongTypeService_getSongType
      description: 楽曲種別取得API
      parameters:
        - name: songTypeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeGetResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
    put:
      operationId: SongTypeService_updateSongType
      description: 楽曲種別更新API
      parameters:
        - name: songTypeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongTypeUpdateResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongTypeUpdateRequest'
    delete:
      operationId: SongTypeService_deleteSongType
      description: 楽曲種別削除API
      parameters:
        - name: songTypeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error
        '503':
          description: Service unavailable.
        '504':
          description: Server error
      tags:
        - SongType
components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    SongType:
      type: object
      required:
        - songTypeId
        - songTypeName
        - orderNo
      properties:
        songTypeId:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: 楽曲種別ID
        songTypeName:
          type: string
          minLength: 1
          description: 楽曲種別名
        orderNo:
          type: integer
          format: int32
          minimum: 1
          description: 表示順
      examples:
        - songTypeId: 5e8211d4-2952-407c-ba7b-18c3fe0da6e0
          songTypeName: オリジナル
          orderNo: 1
    SongTypeCreateRequest:
      type: object
      required:
        - songTypeName
        - orderNo
      properties:
        songTypeName:
          type: string
          minLength: 1
          description: 楽曲種別名
        orderNo:
          type: integer
          format: int32
          minimum: 1
          description: 表示順
    SongTypeCreateResponse:
      type: object
      required:
        - songType
      properties:
        songType:
          $ref: '#/components/schemas/SongType'
    SongTypeGetResponse:
      type: object
      required:
        - songType
      properties:
        songType:
          $ref: '#/components/schemas/SongType'
    SongTypeListResponse:
      type: object
      required:
        - songTypes
      properties:
        songTypes:
          type: array
          items:
            $ref: '#/components/schemas/SongType'
    SongTypeUpdateRequest:
      type: object
      required:
        - songTypeName
        - orderNo
      properties:
        songTypeName:
          type: string
          minLength: 1
          description: 楽曲種別名
        orderNo:
          type: integer
          format: int32
          minimum: 1
          description: 表示順
    SongTypeUpdateResponse:
      type: object
      required:
        - songType
      properties:
        songType:
          $ref: '#/components/schemas/SongType'
    ValidationError:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    uuid:
      type: string
      format: uuid
servers:
  - url: https://local.admin.terrarium.isekaijoucho.fan/api
    description: ローカル環境
    variables: {}
